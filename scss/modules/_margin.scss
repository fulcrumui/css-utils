// Margin classes
/*
  * This will create a `margin: 0 !important;` rule as well
  * as a `margin-[top|right|bottom|left]: 0;`
*/
@mixin margins($start: 0, $end: 10, $multiplier: 5) {
  $positions: (
    top,
    bottom,
    left,
    right,
  );
  @if ($start == 0) {
    .u-margin-0 {
      &#{&} {
        margin: 0 !important;
      }
    }
  }
  @each $position in $positions {
    @for $i from $start through $end {
      $value: $i * $multiplier;
      .u-margin-#{$position}-#{$value} {
        &#{&} {
          margin-#{$position}: #{$value}px;
        }
      }
      @if ($position == 'top') {
        .u-margin-block-#{$value} {
          &#{&} {
            margin-block-start: #{$value}px;
            margin-block-end: #{$value}px;
            margin-top: #{$value}px;
            margin-bottom: #{$value}px;
          }
        }
      } @else if ($position == 'left') {
        .u-margin-inline-#{$value} {
          &#{&} {
            margin-inline-start: #{$value}px;
            margin-inline-end: #{$value}px;
            margin-left: #{$value}px;
            margin-right: #{$value}px;
          }
        }
        .u-margin-all-#{$value} {
          &#{&} {
            margin: #{$value}px;
          }
        }
      }
    }
  }
}


