@mixin sectionHeader($fontSize, $fontColor, $borderBottomWidth, $borderBottomStyle, $borderBottomColor) {
  font-size: $fontSize;
  color: $fontColor;
  font-weight: 500;
  border-bottom: $borderBottomWidth $borderBottomStyle $borderBottomColor;
  width: 100%;
  padding: 0 0 4px 0;
}
@mixin disabledInput {
  color: #c8cdd0;
  pointer-events: none;
}
@mixin fullWidth() {
  width: 100%;
}

// Consistent sizing calculation
// @mixin headerSizing($baseFontSize, $scalingNum) {
//   @for $i from 1 through 6 {
//     h#{$i} {
//       font-size: $baseFontSize + $scalingNum * (6 - $i);
//     }
//   }
// }




  // Movement Classes
  /*
    This will allow you to move an element in one direction without
    having to write a specific rule. This is based on the top and
    left properties of the element
  */
  // @mixin move($direction, $amount) {
  //   position: relative;
  //   @if ($direction == up) {
  //     top: -#{$amount};
  //     @debug -#{$amount};
  //   } @else if ($direction == down) {
  //     top: $amount;
  //     @debug $amount;
  //   } @else if ($direction == right) {
  //     left:
  //   }
  //   @each $position in $positions {
  //     @for $i from $start through $end {
  //       $value: $i * $multiplier;
  //       .u-padding-#{$position}-#{$value} {
  //         padding-#{$position}: #{$value}px;
  //       }
  //     }
  //   }
  // }
